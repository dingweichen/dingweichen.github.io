{"pages":[],"posts":[{"title":"第一篇hexo测试","text":"","link":"/2020/06/18/%E7%AC%AC%E4%B8%80%E7%AF%87hexo%E6%B5%8B%E8%AF%95/"},{"title":"本地推送到远端命令","text":"​ 记录了hexo的一些常用命令。 用MakeDown语法写好日志后，执行命令推送到远端 写好文章后，清理本地hexo博客 hexo c 重新本地生成hexo博客 hexo g 将本地的更新推送到远端 hexo d 新建一篇文章1hexo new post 文章名","link":"/2020/08/26/%E6%9C%AC%E5%9C%B0%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%AB%AF%E5%91%BD%E4%BB%A4/"},{"title":"Git笔记","text":"这篇文章解释了如何用版本管理工具git管理代码，远端仓库用的是知名同性交流社区GitHub，当然你也可以用GitLab、码云等其他远端仓库。 一、git使用前配置​ 1. 设置提交人姓名 1git config --global user.name 提交人姓名 ​ 2. 设置提交人邮箱 1git config --global user.email 提交人邮箱 3. 查看历史配置1git config --list 二、git本地仓库的操作 基本操作 项目代码提交–&gt;缓冲区–&gt;git本地仓库 1234git init // 初始化本地仓库git status // 查看当前项目文件夹有哪些文件需要加入缓冲区git add 文件列表/. // 将文件列表加入缓冲区,其中.表示将所有文件加入缓冲区git commit -m // 将缓冲区的文件加入git本地仓库中 使用缓冲区进行版本回退 1git checkout 文件列表 从缓冲区中将文件剔除，不被git所管理 12git rm --cached 文件列表 // 注意只是从缓冲区中剔除，可以用git add命令再次加入缓 // 冲区中 使用git本地仓库进行版本回退，注意这里是同时回退git本地仓库和项目文件 1git rest --hard commitID // commitID为缓冲区提交到本地git仓库时的序列号 git分支​ git仓库初始化时存在一条主分支master，管理员可以在主分支上创建子分支。同时git会为这个子分支分配对应的git本地仓库和项目文件。注意：每个分支都有一个git仓库和项目文件，分支与分支之间是独立的，意味着分支下对应的git仓库和项目文件也是独立的。 基本命令 12345git branch // 查看当前分支git branch 分支名 // 创建新分支git checkout 分支名 // 切换到该分支git merge 子分支名 // 合并分支git branch -d 分支名 // 删除分支，注意-d是子分支被合并后可删除，-D是不被合并进行强制删除 在不同步项目文件和本地仓库的情况下切换分支 ​ 前面我们提到如果要进行分支的切换，必须先将项目文件与本地仓库保持一致，即先将改动提交至本地git仓库，才可以切换分支。但有些时候，在develop分支上的功能未开发完全，就得切换至bug分支解决bug，你不可能将develop未开发完全的代码同步至本地仓库，那么如何暂时保存develop分支上改动的代码，在不同步至仓库的情况下，切换至bug分支呢？ 12git stash // 存储临时改动不同步至本地git仓库git stash pop // 恢复改动 **stash是git用于存储临时操作的一个栈，在任何分支下都能push当前状态，但pop出来的时候，必须切换到“栈顶状态”对应的分支。**​ ![image-20200907113633814](image-20200907113633814.png 在本地给远端创建分支 1git push -u 远端URL 新建分支名称 三、项目管理者：git本地推送到远端仓库的操作 初始化一个本地仓库，在项目的根目录下打开git Base，输入 1git init 创建项目文件，并查看当前本地仓库状态 1git status 将代码提交到本地git的缓冲区 1git add 文件名称 将缓冲区文件提交至本地git仓库 1git commit -m 本次提交描述 创建一个远端git仓库，这里用github 将本地仓库推送到远端仓库 1git push 远端仓库的URL 分支名（默认master） tips1：为远端仓库地址添加别名 1git remote add 别名 远端地址 tips2: windows记录的github账户及密码查看 tips3: 简化本地仓库提交到远端仓库命令 12git push -u 远端地址 分支 // 第一次提交输入-u参数git push // 往后都是提交到该远端地址 + 分支 上 四、其他开发者：git远端仓库clone项目–修改–重新上传至远端 将远端仓库代码拉到本地 1git clone 远端仓库URL 修改代码后，提交代码到缓冲区，再提交到本地仓库 123git status // 查看哪些文件有修改git add 被修改的文件名 // 将修改文件提交到缓冲区git commit -m 本次提交描述 // 将缓冲区更新到本地git仓库 远端仓库管理员给其他开发者放权 获得权限后，其他开发者可以将代码提交至远端仓库 1git push 远端仓库URL 分支名 执行此命令后，提交者是windows记录的GitHub账户。清除“windows凭据”后，需重新输入账号进行代码提交。 五、项目管理者：从远端仓库拉取其他开发者上传后的项目 在初始项目的本地文件夹下，打开gitBase，输入以下命令拉取 1git pull 远端仓库URL 分支 tips1:git clone 和git pull 命令的区别： git clone相当于在本地文件种下项目的一个种子，获得远端项目在clone那个时间戳的版本。git pull相当于在“种子”的基础上浇水，在git clone后的项目文件夹下执行git pull 可以获取最新的版本。 六. 多人协作开发项目时冲突的解决 A先提交版本1.1.1 B再提交版本1.1.2 解决冲突： B先拉取最新的远端仓库的项目版本代码 解决冲突后上传代码 七、git的一些技巧 用ssh密钥实现免密登录 在windows上生成基于RSA加密算法的公钥及私钥 1ssh-keygen 将生成的公钥添加入远程仓库管理员的github中 git忽略清单 创建.gitignore文件并在其中列出忽略的文件名","link":"/2020/09/07/Git%E7%AC%94%E8%AE%B0/"}],"tags":[],"categories":[]}